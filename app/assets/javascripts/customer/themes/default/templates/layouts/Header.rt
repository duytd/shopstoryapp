<header class="header">
  <div class="container-fluid top">
    <div class="pull-left">
      <span rt-if="this.props.globalVars.current_customer == null">
        <a href="{Routes.customer_omniauth_authorize_path({provider: 'doindie', locale: I18n.locale})}">{I18n.t("buttons.login")}</a>
        <a href="{Routes.new_customer_registration_path({locale: I18n.locale})}">{I18n.t("buttons.register")}</a>
      </span>

      <a rt-if="this.props.globalVars.current_customer" href="{Routes.destroy_customer_session_path({locale: I18n.locale})}">{I18n.t("buttons.logout")}</a>
      <a rt-if="this.props.globalVars.current_customer" href="{Routes.customer_account_path({locale: I18n.locale})}">{I18n.t("buttons.my_account")}</a>
    </div>

    <div class="pull-right languages">
      <a href="?locale=ko">{I18n.t("languages.korean")}</a>
      <a href="?locale=en">{I18n.t("languages.english")}</a>
    </div>
  </div>
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
          data-target="#shopstory-navbar-collapse" aria-expanded="false">
          <span class="sr-only"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/"><img src="{this.props.globalVars.logo}" height="20" /></a>
      </div>

      <div class="collapse navbar-collapse" id="shopstory-navbar-collapse">
        <Menu menu="{this.props.globalVars.menu.main_menu}" rt-if="this.props.globalVars.menu.main_menu" />
        <ul class="nav navbar-nav navbar-right">
          <li class="cart">
            <a href="#" onClick="{this.openCart}">
              <i class="fa fa-shopping-cart"></i>
              {"(" + this.state.itemCount + ")"}
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <CartPopup
    globalVars = "{this.props.globalVars}"
    isCartOpened = "{(this.props.isCartOpened) ? this.props.isCartOpened : this.state.isCartOpened}"
    openCart = "{this.openCart}"
    closeCart = "{this.closeCart}"
    updateCart = "{this.props.updateCart}"
    cartErrors = "{this.props.cartErrors}"
    setCartErrors = "{this.props.setCartErrors}"
    emptyCartErrors = "{this.props.emptyCartErrors}"
  />
</header>
